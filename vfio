#!/usr/bin/env ruby
########################################################
require 'epitools'

gem 'slop', "~> 3.6"
require 'slop'
########################################################

def cputs(str)
  puts "#{str}".colorize
end

class PCIDevice < Struct.new(:addr, :desc)
  def self.lookup(device_id)
    addr, desc = `lspci -nns #{device_id}`.strip.split(/\s+/, 2)
    new(addr, desc)
  end

  def to_s
    "  <11>#{addr} <9>#{desc}"
  end
end

########################################################
# Parse options

opts = Slop.parse(help: true, strict: true) do
  banner "Usage: vfio [options]"

  # on "a",  "along",  "desc"
  # on "b=", "blong",  "desc", default: ""
end

args = ARGV

########################################################

cputs "<8>=== <15>PCI Bus IOMMU Groups: <8>==="
puts

groups = Path["/sys/kernel/iommu_groups/*"].sort_by { |path| path.dirs.last.to_i}

groups.each do |group|
  num = group.dirs.last
  cputs "<2>Group <10>#{num}<2>:"

  device_ids = (group/"devices/*").map { |path| path.dirs.last }
  device_ids.each do |device_id|
    cputs PCIDevice.lookup(device_id)
  end
  puts
end
puts

cputs "<8>=== <15>Bound to vfio_pci driver: <8>==="
puts

Path["/sys/bus/pci/drivers/vfio-pci/*"].select { |path| path.dirs.last[/\d{4}:\d/] }.each do |path|
  cputs PCIDevice.lookup(path.dirs.last)
end

puts