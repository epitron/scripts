#!/usr/bin/env ruby
require 'json'

def usage
  puts
  puts "Usage:"
  puts "  nicejson <options> [file(s)...]"
  puts
  puts "Options:"
  puts "  -i     Inline mode (replace the original file)"
  puts "  -o     One-JSON-object-per-line mode"
  puts
end

def pretty(json)
  JSON.pretty_generate(json)
end

opts, args = ARGV.partition { |arg| arg[/^--?\w/] }

if opts.delete("--help") or opts.delete("-h")
  usage
  exit 0
end

inputs = args #.map { |arg| (arg == "-") ? $stdin : open(arg) }
inputs << "-" if inputs.empty?

inline_mode  = opts.delete("-i")
one_per_line = opts.delete("-o")

# make sure the user didn't get too excited
if inline_mode and one_per_line
  $stderr.puts "Sorry, you can't use one-per-line mode with inline mode... for... reasons. Please try something different."
  exit 1
end

inputs.each do |input|

  io = (input == "-") ? $stdin : open(input)

  if one_per_line
    # write to stdout
    io.each_line do |line|
      puts pretty(JSON.parse(line))
    end

  elsif inline_mode
    if input == "-"
      $stderr.puts "Sorry, you can't use inline mode (which replaces the original file) on STDIN. Please provide a filename."
      exit 1
    end

    # write results to the original file
    puts "* #{input}"
    json = pretty(JSON.load(io))
    io.close
    File.write(input, json)

  else
    # print to stdout
    puts pretty(JSON.load(io))
  end

  io.close unless io == $stdin

end
