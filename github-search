#!/usr/bin/env ruby
###################################################################
require 'json'
require 'epitools/colored'
###################################################################


# GITHUB_SEARCH_URL = 'https://api.github.com/search/repositories?q=tetris+language:assembly&sort=stars&order=desc'
GITHUB_SEARCH_URL = 'https://api.github.com/search/repositories?q=%s&sort=stars&order=desc'

###################################################################

class String
  def tighten; gsub(/[\t ]+/,' ').strip; end
  def any?; not empty?; end
  def indent(prefix="    ")
    each_line.map { |line| prefix + line }.join('')
  end
end

class Numeric
  def commatize(char=",")
    int, frac = to_s.split(".")
    int = int.gsub /(\d)(?=\d{3}+(?:\.|$))(\d{3}\..*)?/, "\\1#{char}\\2"

    frac ? "#{int}.#{frac}" : int
  end
end

###################################################################

def extract_info(root)
  result = []

  classes = root["class"].split.map do |s|
    if s =~ /^gems__gem__(.+)/
      $1.gsub("__", "_")
    else
      nil
    end
  end.compact

  text = root.inner_text.tighten
  
  if classes.any? and text.any? 
    result << [classes.first, text]
  end

  root.children.each do |node|
    next unless node.is_a? Oga::XML::Element
    result += extract_info(node)
  end

  result
end

###################################################################


# Handle ARGV

query = ARGV.join("+")

if query.empty?
  puts "Usage: #{__FILE__} <search query>"
  puts
  puts "Note: You can use special github tags like 'language:ruby'"
  exit 1
end

# curl the results

puts "<8>* <7>Searching github.com for <14>#{query.inspect}<7>...".colorize

begin
  data = IO.popen(["curl", "-Ss", GITHUB_SEARCH_URL % query], &:read)
rescue Errno::ENOENT
  puts "Error: 'curl' isn't installed. You need this!"
  exit 1
end

json = JSON.parse(data)
puts

# print the results

json["items"].reverse.each do |item|
  name     = item["full_name"]
  desc     = item["description"]
  stars    = item["stargazers_count"].to_i
  size     = item["size"].to_i
  language = item["language"]
  url      = item["clone_url"]

  puts "<8>=== <11>#{name} <7>(#{"<9>#{language}<8>, " if language}<10>#{stars.commatize} <2>stars<8>, <13>#{size.commatize}<5>KB<7>) <8>==============".colorize
  puts "    <15>#{desc}".colorize if desc
  puts "    <3>#{url}".colorize
  puts
end
