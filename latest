#!/usr/bin/env ruby
gem "slop", "~> 3.6"
require 'slop'
require 'rubygems'
require 'epitools'
require 'date'

#
# -n number
# ARGS: files/directories (which will be merged into one big list)
#
# lesspipe output
#
count = ARGV.first ? ARGV.first.to_i : nil
paths = Dir['**/*'].select{|fn| not File.directory?(fn)}

# Get modification times
paths = paths.map do |fn|
  mtime = File.mtime(fn) rescue nil
  next unless mtime
  [mtime, fn]
end.compact

paths                   = paths.sort[-count..-1] if count
paths_grouped_by_date   = paths.group_by{|t,f| t.strftime("%Y-%m-%d") }.sort

lesspipe(tail: true) do |less|
  for date, paths in paths_grouped_by_date

    less.puts DateTime.parse(date).strftime("%b %d, %Y").light_blue

    time_dir_file                = paths.map { |time, path| [time] + File.split(path) }
    time_dir_file_grouped_by_dir = time_dir_file.group_by { |time, dir, file| dir }.sort

    ## put "." files last
    #tmp = time_dir_file_grouped_by_dir.remove_if { |e| e.first == "." }
    #time_dir_file_grouped_by_dir += tmp

    for dir, time_dir_file in time_dir_file_grouped_by_dir
      less.puts "  #{dir.light_cyan}/" unless dir == '.'

      for time, dir, file in time_dir_file
        less.print "  " unless dir == "."
        less.puts "  " + file
      end
    end

    less.puts

  end
end
