#!/usr/bin/env ruby
###################################################################
gem 'oga'
gem 'epitools'
require 'epitools'
###################################################################

class String
  def tighten; gsub(/[\t ]+/,' ').strip; end
  def any?; not empty?; end

  def indent(prefix="    ")
    gsub(/^/m, prefix)
  end

  def commatize
    gsub /(\d)(?=\d{3}+(?:\.|$))(\d{3}\..*)?/, "\\1,\\2"
  end
end

class Integer
  def commatize; to_s.commatize; end
end

###################################################################

def help!
  puts "usage:"
  puts "  $ #{$PROGRAM_NAME} <search query>"
  puts "    (searches all packages)"
  puts
  puts "  #{$PROGRAM_NAME} -i <gem name>"
  puts "    (shows info about a specific package)"
  puts
  exit 1
end

###################################################################

def search(query)
  html = curl("https://pypi.org/search/?q=#{query}")
  doc = Oga.parse_html(html)

  # <li>
  #   <a class="package-snippet" href="/project/butt/">
  #     <h3 class="package-snippet__title">
  #       <span class="package-snippet__name">butt</span>
  #       <span class="package-snippet__version">0.1</span>
  #       <span class="package-snippet__released"><time datetime="2018-08-17T10:14:26+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false" title="2018-08-17 06:14:26" aria-label="2018-08-17 06:14:26">Aug 17, 2018</time></span>
  #     </h3>
  #     <p class="package-snippet__description">A command line client for scuttlebutt.</p>
  #   </a>
  # </li>
  doc.css("li a.package-snippet").map do |pkg|
    result = {}
    result[:url] = File.join("https://pypi.org/", pkg["href"])
    %i[name version released created description].each do |field|
      val = pkg.at_css(".package-snippet__#{field}")&.text&.tighten
      result[field] = val if val
    end
    result
  end
end

###################################################################

def print_search_results(query)
  pkgs = search(query)

  pkgs.reverse_each do |info|
    puts ("<8>=== " +
          "<11>#{info[:name]} " +
          "<7>(<3>v#{info[:version]}<7>)" +
          "<8>==============").colorize
    puts info[:released].indent.white unless info[:released].blank?
    puts info[:created].indent.white unless info[:created].blank?
    puts info[:description].indent.bright_white unless info[:description].blank?
    puts "    <3>#{info[:url]}".colorize
    puts
  end
end

###################################################################
# Handle ARGV

opts, args = ARGV.partition { |arg| arg[/^-\w/] }

if (args.empty? and opts.empty?) or opts.include?("--help")
  help!
  exit 1
end

if opts.include?("-i")
  args.each { |arg| print_pkg_info(arg) }
else
  query = args.join("+")
  puts "<8>* <7>Searching pypi for <14>#{query.inspect}<7>...".colorize
  print_search_results(query)
end
