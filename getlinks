#!/usr/bin/env ruby
####################################################################
require 'epitools'
require 'oga'

gem 'slop', "~> 3.6"
require 'slop'
####################################################################
# Parse options

opts = Slop.parse(help: true, strict: true) do
  banner "Usage: getlinks [options] <url(s)>"

  on "l", "links",  "Print links (default)"
  on "i", "images", "Print images"
  on "m", "media",  "Print non-image media (video and audio)"
  on "b", "blank-title", "Print links with blank titles (default: ignore them)"
  on "g", "grep", "Look for URLs by parsing the page as plain text (ie: for urls in json blobs)"
end

args = ARGV

####################################################################

class String
  def tighten
    gsub(/\s{2,}/, ' ').strip
  end
end

class URI::Generic
  alias_method :old_to_s, :to_s
  def to_s
    old_to_s.chomp("?")
  end
end

####################################################################

def print_links(less, root_uri, doc, print_blank_title: false)
  already_printed = Set.new

  less.puts "## links"
  less.puts

  doc.css("a").each do |link|
    title = link.text.tighten
    uri   = URI.join(root_uri, link["href"])

    unique_id = [title, uri]

    next if title.empty? and not print_blank_title
    next if already_printed.include? unique_id

    less.puts "# #{title}" unless title.empty?
    less.puts "#{uri}"
    less.puts

    already_printed.add unique_id
  end
end

def print_images(less, root_uri, doc)
  already_printed = Set.new

  less.puts "## images"
  less.puts

  doc.css("img").each do |img|
    title = img["title"]&.tighten
    alt = img["alt"]&.tighten
    uri = URI.join(root_uri, img["src"])

    unique_id = [title, alt, uri]

    next if already_printed.include? unique_id

    less.puts "# title: #{title}" if title and not title.empty?
    less.puts "# alt: #{alt}" if alt and not alt.empty?
    less.puts "#{uri}"
    less.puts

    already_printed.add unique_id
  end
end

def print_media(less, root_uri, doc)
  doc.css("video, audio").each do |v|
    less.puts v.to_s
  end
end

WEIRD_BLANK = "Â " # 0xA0... I can copy/paste it, but "\xA0" is illegal??? weird.
URL_RE = %r{https?://[^"' <#{WEIRD_BLANK}]+}
def print_grepped_urls(less, html)
  html.scan(URL_RE).each do |m|
    less.puts m
    less.puts
  end
end

####################################################################

lesspipe do |less|
args.each do |url|
  less.puts "### URL: #{url}"

  html = cached_curl(url)

  if opts.grep?
    less.puts
    print_grepped_urls(less, html)
  else
    doc = Oga.parse_html 

    root_uri = URI.parse url
    title = doc.at_css("title")&.text&.tighten

    less.puts "### #{title}" if title and not title.empty?
    less.puts

    print_images(less, root_uri, doc) if opts.images?
    print_media(less, root_uri, doc)  if opts.media?

    if opts.links? or (!opts.links? and !opts.images? and !opts.media?)
      print_links(less, root_uri, doc, print_blank_title: opts[:"blank-title"])
    end
  end
end
end
