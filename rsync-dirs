#!/usr/bin/env ruby
#######################################################################################

def which(bin)
  ENV["PATH"].split(":").each do |dir|
    full_path = File.join(dir, bin)
    return full_path if File.exists? full_path
  end
  nil
end

#######################################################################################

opts, args = ARGV.partition { |arg| arg =~ /^-\w/ }

# expand smashed-together options (ie: -alp) into individual options (ie: -a -l -p)
opts = opts.map do |opt|
  if opt =~ /^-(\w{2,})/
    $1.chars.map { |c| "-#{c}" }
  else
    opt
  end
end.flatten.uniq

#######################################################################################

SSH_REGEXP         = /^([^@]+@)?([^:]+):(.+)$/
RSYNC_REGEXP       = %r{^(rsync://.|[^:]+::.+)}
REMOTE_PATH_REGEXP = /(#{SSH_REGEXP}|#{RSYNC_REGEXP})/

if args.any?

  params = []

  unless which("rsync")
    $stderr.puts "rsync not installed. please fix!"
    exit 1
  end

  if opts.delete "-l"
    params << "--list-only"
  else
    letters  = %w[r l t]
    letters += %w[o g p] if opts.delete("-o") # ownership
    letters += %w[zz]    if args.any? { |arg| arg =~ REMOTE_PATH_REGEXP } # enable compression over the network

    unless opts.delete "-q"
      params  << "--progress"
      letters << "v"
    end

    params << "--bwlimit=40"      if opts.delete "-b"  # limit bandwidth
    params << "--copy-links"      if opts.delete "-L"  # dereference symlinks
    params << "--append-verify"   if opts.delete "-a"  # append to smaller destination files if they match
    params << "--partial"         if opts.delete "-p"  # partials
    params << "--delete-after"    if opts.delete "-d"  # delete destination files
    params << "--dry-run"         if opts.delete "-n"  # simulated sync (no changes are made)
    params << "--xattrs"          unless opts.delete "-X"   # don't sync extended attributes
    params << "--remove-source-files"   if opts.delete "-m" # move files (delete source files)
    params += ["-e", "ssh -c blowfish"] if opts.delete "-f" # fast cipher
    params += %w[--specials --devices]  if opts.delete "-s" # sync special files (sockets, fifos) and devices


    if opts.delete "-c" # checksum mode
      params << "--checksum"
    else
      params << "--size-only"
    end

    params = ["-#{letters.join ''}"] + params
    params += opts # pass through remaining options to rsync
  end

  cmd = ["rsync"] + params + args

  puts "Executing:"
  puts "\t#{cmd.join ' '}"
  puts

  system *cmd

else

  puts "usage: rsync-dirs [options] <src> <dest>"
  puts
  puts "Special options:"
  puts "    -q    Quiet mode"
  puts "    -l    List files only! (ignores all other options)"
  puts "    -c    Checksum files (instead of using file size)"
  puts "    -L    Dereference symlinks"
  puts "    -o    Preserve ownership (user/group/permissions)"
  puts "    -s    Sync special files (sockets, fifos, devices)"
  puts "    -a    Append to smaller destination files"
  puts "          (if their overlap has the same checksum)"
  puts "    -d    Delete destination files that aren't in the source"
  puts "    -m    Move files"
  puts "    -p    Keep partially-transferred files"
  puts "    -n    Dry run (simulated, don't make any changes)"
  puts "    -b    Bandwidth limit (40k/sec)"
  puts "    -f    Fast crypto cipher (arcfour)"
  puts

end
