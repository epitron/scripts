#!/usr/bin/env ruby
#######################################################
## Uses 'netstat' and 'fuser' to show all programs 
## that are listening on TCP/UDP ports.
#######################################################

# show a fancy title
def title(msg, width=60)
  puts "-"*width
  puts " " + msg
  puts "="*width
end


#######################################################
## gather open ports from 'netstat'
#######################################################

# regexes to match netstat output
IP4LINE = /^(tcp|udp)\s+\d+\s+\d+\s+([\d\.]+):(\d+)\s+/
IP6LINE = /^(tcp|udp)6\s+\d+\s+\d+\s+([\w\d:]+):(\d+)\s+/
ports  = `netstat -ln`.lines.map { |line| [$3.to_i, $1] if line =~ IP4LINE or line =~ IP6LINE }.compact


#######################################################
## display programs which are listening using 'fuser'
#######################################################

title "Listening sockets (IPv4 & IPv6):"
params = ports.sort.uniq.map { |port,proto| "#{port}/#{proto}" }

IO.popen(["fuser", "-v", *params], err: [:child, :out]) do |fuser|
  errors = []
  fuser.each_line do |line|
    if line =~ %r{Cannot stat file /proc/(\d+)/.+}
      errors << $1
    else    
      puts line
    end
  end

  mystery_ports = ports.select { |port| errors.include? port }
  puts
  puts "Inaccessible pids:"
  system("ps", *errors)
end

puts
