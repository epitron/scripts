#!/usr/bin/env ruby
################################################
require 'epitools/clitools'
################################################

LOCAL_QUOTES_FILE = "#{__dir__}/quotes.txt"

################################################

def quotes(files=nil)
  files.flat_map do |file|
    open(file) { |f| f.read.split("\n%\n") }
  end
end

################################################
opts, args = ARGV.partition { |arg| arg[/^--?\w/] }

if opts.delete("-e")
  cmd = [which("s") ? "s" : ENV["EDITOR"], LOCAL_QUOTES_FILE, *args]
  system *cmd
  exit
end

if opts.delete("-f")
  files = Dir["/usr/share/fortune/**/*"].select { |fn| File.file?(fn) and not fn[/\.dat$/] }
else
  files = [LOCAL_QUOTES_FILE]
end

if args.any? { |arg| %w[-c --count -s --stats --stat].include? arg }

  # Show statistics
  puts "#{quotes(files).count} quotes"

elsif args.any?

  # Search quotes
  require 'epitools'

  matchers = args.map { |arg| /#{Regexp.escape(arg)}/i }

  quotes(files).select do |quote|
    if matchers.all? { |m| m =~ quote }
      h = quote.dup
      # h.gsub!(/^\s+-- .+$/) { |s| "<9>#{s}</9>"} # highlight author name
      matchers.each {|m| h.gsub!(m) { |s| "<14>#{s}</14>" } }
      h += "\n<8>----</8>"
      puts h.colorize
    end
  end

else
  # Show random quote
  puts quotes(files).sample
end
