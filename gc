#!/usr/bin/env ruby

# TODO:
# - combine this with a shell script that 'cd's into the directory
# - list the directory after the clone

if ARGV.empty?
  puts "Usage:"
  puts "  gc [options] <git repo url>"
  puts
  puts "Options:"
  puts "  -s   Shallow clone (no history, much faster)"
  puts
  exit
end

opts, args = ARGV.partition { |arg| arg[/^-\w/] }

args.map! do |arg|
  if arg =~ /^[\w\-]+\/[\w\-]+$/ and not File.exists? arg
    "https://github.com/#{arg}"
  else
    arg
  end
end

cmd = ["git", "clone", "--recursive"]
cmd << "--depth=1" if opts.delete("-s")

cmd += args

reponame = nil

require 'pty'
PTY.spawn(*cmd) do |r, w, pid|
  begin
    loop do
      line = r.readpartial(4096)
      print line

      if line =~ /Cloning into '([^']+)'/
        reponame ||= $1
      elsif line =~ /destination path .+ already exists/
        exit 1
      end
    end
  rescue Errno::EIO
  end
end

if reponame
  # system("subl", reponame)
  readmes = Dir.foreach(reponame).select { |f| f[/^readme/i] }.sort_by(&:size)
  if readme = readmes.first
    Dir.chdir(reponame)
    system("c", readme)
  end
end
