#!/usr/bin/env python
################################################################################################
import sys
import subprocess
################################################################################################
reset         = '\033[0m'
bold          = '\033[01m'

disable       = '\033[02m'
underline     = '\033[04m'
reverse       = '\033[07m'
strikethrough = '\033[09m'
invisible     = '\033[08m'

black         = '\033[30m'
red           = '\033[31m'
green         = '\033[32m'
orange        = '\033[33m'
blue          = '\033[34m'
purple        = '\033[35m'
cyan          = '\033[36m'
white         = '\033[37m'

grey          = '\033[90m'
lightred      = '\033[91m'
lightgreen    = '\033[92m'
yellow        = '\033[93m'
lightblue     = '\033[94m'
pink          = '\033[95m'
lightcyan     = '\033[96m'
################################################################################################

try:
  from youtube_search import YoutubeSearch

except ModuleNotFoundError:
  print(f"Missing youtube search support; run '{bold}pip install --user youtube-search{reset}' first.")
  sys.exit(1)

################################################################################################

if len(sys.argv) < 2:
  print("usage: yt <playlist>")
  sys.exit(1)

################################################################################################

def num_prompt(msg="> "):
  while True:
    print(msg, end="", flush=True)
    inp = sys.stdin.readline().strip()
    if inp == "":
      return None
    try:
      val = int(inp)
      return val
    except ValueError:
      print("not a number!")

################################################################################################

def get_track(query, outnum):
  print(f"{grey}* {white}Searching for: {bold}{yellow}{query}{reset}...")

  results          = YoutubeSearch(query, max_results=20).to_dict()
  numbered_results = [ (i, r)   for i, r in enumerate(results) ]

  for n, r in reversed(numbered_results):
    # r = {'id': 'Zo_jdDGwdg0',
    #      'thumbnails': ['https://i.ytimg.com/vi/Zo_jdDGwdg0/hqdefault.jpg?sqp=-oaymwEjCOADEI4CSFryq4qpAxUIARUAAAAAGAElAADIQj0AgKJDeAE=&rs=AOn4CLDN0XzvVvVswzAx91QUuNMvy5J4qw'],
    #      'title': 'Swans The Sound of Freedom',
    #      'long_desc': None,
    #      'channel': 'JÃ¤nnis Bunker',
    #      'duration': '4:36',
    #      'views': '932 views',
    #      'url_suffix': '/watch?v=Zo_jdDGwdg0'},

    indent = " " * (len(str(n)) + 2)

    print(f"{lightcyan}{n+1}. {bold}{white}{r['title']}{reset} {grey}[{white}{r['duration']}{grey}]{reset}")
    print(f"{indent}{grey}by {lightgreen}{r['channel']} {grey}({white}{r['views']}{grey}){reset}")
    print(f"{indent}{bold}{blue}https://youtu.be/{r['id']}{reset}")

    if r['long_desc']:
      print(f"{indent}{r['long_desc']}")

    print()

  print(query)
  selection = num_prompt()
  if selection:
    _, r = numbered_results[selection-1]
    print(r)
    cmd = [
      "youtube-dl",
      f"https://youtu.be/{r['id']}",
      "--extract-audio", "--add-metadata", "--no-mtime", "--xattrs",
      "-f", "bestaudio[ext=m4a]/bestaudio[ext=mp3]/bestaudio",
      "-o", f"{outnum}. %(title)s.%(ext)s",
    ]
    # TODO: If r['channel'] ends with ' - Topic', put the channel name as the artist name
    print(cmd)
    subprocess.run(cmd)

################################################################################################

playlist = sys.argv[1]

with open(playlist) as f:
  for i, line in enumerate(f.readlines()):
    num = i+1
    line = line.strip()
    print(num, line)
    get_track(line, num)


