#!/usr/bin/env ruby

args = ARGV

if args.empty? or args.delete("--help")
  puts "Youtube-DL Wrapper!"
  puts
  puts "Usage:"
  puts "  gfv [options] <youtube url(s)>"
  puts
  puts "Options:"
  puts "  -l     Low quality mode"
  puts "  -h     High quality mode"
  puts "  -n     Number the files when downloading playlists"
  puts "  -a     Download audio only"
  puts "  -s     Download subtitles only"
  puts
  puts "(any other options will be passed directly to youtube-dl)"
  puts
  exit 1
end

cmd = %w[
  youtube-dl
  --no-mtime
  --xattrs
  --sub-format=srt/ass/vtt/best --sub-lang=en,en-CA --write-sub
]
# --sub-lang=en --write-sub
# --convert-subtitles=srt --sub-lang=en --embed-subs

unless args.include?("-o")
  cmd << "-o"
  if args.delete("-n")
   cmd << "%(playlist_index)s. %(title)s.%(ext)s"
  else
   cmd << "%(title)s.%(ext)s"
  end
end

if args.delete("-a")
  cmd << "--extract-audio"
  cmd += ["-f", "bestaudio[ext=m4a]"] unless args.include?("-f")
  # cmd += %w[--extract-audio -f bestaudio]
elsif args.delete("-s")
  cmd << "--skip-download"
elsif args.delete("-l")
  ## youtube-dl defaults to the best quality, so this isn't necessary -- it just causes problems
  cmd += %w[-f best --youtube-skip-dash-manifest]
end

urls, args = args.partition { |arg| arg[%r{^\w{2,20}://}] }

cmd += args

urls.each do |url|
  if url =~ /(youtu\.be|youtube\.com)/
    unless args.include?("-f") or args.delete("-h")
      cmd += %w[-f bestvideo[height<=?1080][ext=mp4]+bestaudio[ext=m4a]/best]
      # cmd += %w[-f bestvideo[ext=mp4]+bestaudio[ext=m4a]]
    end
  end

  onecmd = cmd.dup
  onecmd << url

  puts "-------------------------------------------------"
  puts "  Downloading #{url}"
  puts "-------------------------------------------------"
  puts
  puts "Commandline:"
  puts "  #{onecmd.join(" ")}"
  puts

  system *onecmd
end
