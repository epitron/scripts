#!/usr/bin/env ruby
gem "slop", "~> 3.6"
require 'slop'
require 'epitools'

def parse_options
  @opts = Slop.parse(help: true, strict: true) do
    banner 'Usage: ffmpeg-concat [options] <input videos...> [-o <output file>]'

    on 'o=', 'output',   "The filename to write the concatenated videos to.\n                         (default: the input filenames joined with a '+')"
    on 's',  'sort',     "Sort the input filenames (with proper numerical ordering)"
    on 'v',  'verbose',  'Show verbose output (ie: ffmpeg commandline)'
  end
end

opts    = parse_options
infiles = ARGV.map { |arg| Path.new(arg) }

if infiles.empty?
  puts opts
  exit 1
end

if opts[:output]
  outfile = opts[:output].to_Path
else
  outfile = infiles.map(&:basename).join("+").to_Path.with(ext: infiles.first.ext)
end

if outfile.exists?
  if prompt("Overwrite #{outfile}?", "yN") == "n"
    puts "Aborting..."
    exit
  end
end

## Rip it!

Path.tmpfile do |tmp|
  if opts.sort?
    infiles = infiles.sort_numerically
  end

  tmp.open("w") do |io|
    lines = infiles.map { |infile| "file '#{infile}'\n" }
    io.write lines.join
  end

  puts "Input files:"
  # infiles.each { |infile| puts "  #{infile}" }
  puts File.read tmp
  puts
  puts "Output file:"
  puts "  #{outfile}"
  puts


  cmd = [
    "ffmpeg",
    "-y",
    "-hide_banner",
    # "-loglevel", "error",
    "-f", "concat",
    "-safe", "0",
    "-i", tmp,
    "-c", "copy",
    outfile
  ]

  p cmd if opts.verbose?

  system(*cmd)
  puts "Done!"
end