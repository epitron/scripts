#!/usr/bin/env ruby
require 'epitools'

def audio_format(path)
  output = run_with_stderr("ffprobe", path).each_line do |line|
    p line
    if line =~ /Stream \S+: Audio: (\w+)/
      return $1
    end
  end
  nil
end

inputs = ARGV.map { |arg| Path.new(arg) }

unless inputs.size > 0
  puts "usage: ffmpeg-dump-audio <video-filename(s)>"
  exit
end

inputs.each do |infile|
  unless infile.exists? or infile.path[/^http/i]
    puts "Error: #{infile} not found."
    exit 1
  end

  format = audio_format(infile)

  case format
  when "aac"
    ext = "m4a"
  when "mp3"
    ext = "mp3"
  when "vorbis"
    ext = "ogg"
  when "ac3"
    ext = "ac3"
  else
    puts "Unknown input audio format: #{format}"
    exit 2
  end

  outfile = if infile.url?
    Path.new(CGI.unescape(infile.filename)).with(ext: ext)
  else
    infile.with(ext: ext)
  end
  
  puts "--------------------------------------------------------------------------"
  puts "Extracting audio:"
  puts "    in: #{infile}"
  puts "   out: #{outfile}"
  puts "--------------------------------------------------------------------------"
  puts

  system("ffmpeg", "-hide_banner", "-i", infile, "-vn", "-acodec", "copy", outfile)
end
