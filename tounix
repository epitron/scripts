#!/usr/bin/env python2
'''
 =================================================
 The Ubertron Awesomenator 2000!
 -------------------------------------------------
 by Chris Gahan (chris@ill-logic.com)
 =================================================

 This is a batch converter for fixing DOS line-endings in text files
 (by making them UNIX line-endings!). It'll recursively chew through
 a tree of files (or a list you supply it with) and convert all files
 that have the right filename extension (i.e. .py, .txt, .c, .cpp, etc.)

 Edit the "validtypes" definition if you want to make it convert different
 types of files.

 Also, it converts \t's to spaces (if you add the -t <size> option).

'''

__version__ = '0.3'

import os, sys
from os.path import join, splitext, isfile, isdir, islink

validtypes = ['.py', '.txt', '.c', '.cpp', '.h', '.hpp', '.sh', '.js', '.htm', '.html', '.rb', '.rhtml', '.rjs']
ignoredirs = ['CVS', '.svn']

def isValidFile(name):
    root, ext = splitext(name)
    return ext.lower() in validtypes

def getValidFiles(directory):
    results = []
    for root, dirs, files in os.walk(directory):
        results.extend([join(root, name) for name in files])

        for ignoredir in ignoredirs:
            if ignoredir in dirs:
                dirs.remove(ignoredir)

    return filter(isValidFile, results)

def fixLineEnding(string):
    return string.rstrip('\n\r') + '\n'

def fixLineEndingAndTabs(string, tabsize=None):
    newstring = string.rstrip('\n\r') + '\n'
    if tabsize:
        newstring = newstring.replace('\t',' '*tabsize)
    return newstring

def convertFile(filename, tabsize=None):
    try:
        infile = open(filename, 'r')
        fixedlinegenerator = ( fixLineEndingAndTabs(line, tabsize) for line in infile )

	tmpfilename = filename+".being-tounixed"

        outfile = open(tmpfilename, 'w')
        outfile.writelines(fixedlinegenerator)

        outfile.close()
	infile.close()

	os.rename(tmpfilename, filename)

    except Exception, e:
        print "* WHUZZUH?! %s *" % e

def madProps():
    print 'The Ubertron Awesomenator v%s :: by Chris Gahan\n' % __version__

def howToUseMe():
    print 'This program converts MSDOS/Mac text files to UNIX format.'
    print
    print 'Usage:'
    print '    %s [file or directory]' % sys.argv[0]
    print
    print 'Options:'
    print '    -t #      | convert tabs to spaces (tab size = #)'
    print
    print 'If a directory is given, all pertient filetypes in the directory and'
    print 'its subdirectories will be converted.'
    print
    print '(Filetypes to scan: %s)\n' % ', '.join(validtypes)


if __name__ == '__main__':
    madProps()

    if len(sys.argv) >= 2:
        args = sys.argv[1:]

        convertme = []

        # parse get the -t option
        if args[0] == '-t':
            tabsize = int(args[1])
            args = args[2:]
        else:
            tabsize = None

        # parse all the filenames on the commandline
        for arg in args:
            if isfile(arg) and not islink(arg):
                convertme.append(arg)
            elif isdir(arg):
                convertme.extend(getValidFiles(arg))
            else:
                print 'WTF is "%s"?!' % arg

        print "Converting %d files to UNIX text format..." % len(convertme)
        print "=========================================="
        for filename in convertme:
            print "+ %s" % filename
            convertFile(filename, tabsize)

        print "------------------------------------------"
        print "* Done!\n"

    else:
        howToUseMe()
