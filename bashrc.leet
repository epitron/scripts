#!/bin/bash

# The directory from which this script is being called
SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Aliases
source "$SCRIPTDIR/aliases.sh"


## Environment Variables

# Push a directory onto the path (if it exists)
function possibly_prepend_path() {
  if [ -d "$@" ]; then
    export PATH="$@:$PATH"
  fi
}

# Things for the PATH (in reverse order of precedence)
possibly_prepend_path ~/.nimble/bin
possibly_prepend_path ~/.luarocks/bin
possibly_prepend_path ~/node_modules/.bin
possibly_prepend_path ~/.cabal/bin
possibly_prepend_path ~/.cargo/bin
possibly_prepend_path ~/go/bin
for i in ~/.gem/ruby/*/bin; do
  possibly_prepend_path $i
done
possibly_prepend_path ~/.gem/bin
possibly_prepend_path ~/.local/bin
possibly_prepend_path $SCRIPTDIR
possibly_prepend_path ~/bin

# Lovely less/man colors
export LESS_TERMCAP_mb="`echo -e '\e[01;31m'`"
export LESS_TERMCAP_md="`echo -e '\e[01;37m'`"
export LESS_TERMCAP_me="`echo -e '\e[0m'`"
export LESS_TERMCAP_se="`echo -e '\e[0m'`"
export LESS_TERMCAP_so="`echo -e '\e[30;44m'`"
export LESS_TERMCAP_ue="`echo -e '\e[0m'`"
export LESS_TERMCAP_us="`echo -e '\e[01;32m'`"

# fzf
if we_have fzf; then
  if we_have bfs; then
    export FZF_DEFAULT_COMMAND="bfs -color"
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
    export FZF_DEFAULT_OPTS="--ansi"
  fi

  if [ -f /usr/share/fzf/completion.bash ]; then
    . /usr/share/fzf/completion.bash
    . /usr/share/fzf/key-bindings.bash
  elif [ -f ~/.fzf/shell/completion.bash ]; then
    . ~/.fzf/shell/completion.bash
    . ~/.fzf/shell/key-bindings.bash
  else
    echo "can't find fzf's bash scripts"
  fi
fi

# misc
if [ "$EDITOR" == "" ]; then
  export EDITOR="nano"
fi
export PAGER=less
export CLICOLOR=1
export PYTHONSTARTUP=~/.pystartup
export XZ_OPT="--threads=0"
#export TERM=xterm-color
#export LSCOLORS=gxgxcxdxbxegedabagacad  # cyan directories

if [ -f /proc/cpuinfo ]; then
  export PROCESSORS="`cat /proc/cpuinfo|grep "processor"|wc -l`"
  export MAKEOPTS="-j`expr $PROCESSORS + 1`"
  export MAKEFLAGS="$MAKEOPTS"
fi

# Enable recursive glob (eg: **/*.txt)
shopt -s globstar > /dev/null 2>&1

# make readline know that the window has resized
shopt -s checkwinsize

# Verify ! history expansions
shopt -s histverify


## Platform-specific customizations

case $(uname -s) in
  Darwin|FreeBSD)
    . $SCRIPTDIR/bashrc.bsd
    export PATH=$SCRIPTDIR/bsd:$PATH
    ;;
  OpenBSD)
    . $SCRIPTDIR/bashrc.openbsd
    export PATH=$SCRIPTDIR/bsd:$PATH
    ;;
esac


case $(uname -o) in
  Android)
    . $SCRIPTDIR/bashrc.android
    ;;
  Cygwin)
    . $SCRIPTDIR/bashrc.cygwin
    ;;
esac


## Disable TTY flow control (^S and ^Q)
#stty stop undef
#stty start undef

# # Run a command without globbing (broken)
# noglob_helper() {
#     "$@"
#     case "$shopts" in
#         *noglob*) ;;
#         *braceexpand*) ;;
#         *) set +f ;;
#     esac
#     unset shopts
# }
# alias noglob='shopts="$SHELLOPTS"; set -f; noglob_helper'


# colorful manpages
# man() {
#   env \
#     LESS_TERMCAP_mb=$(printf "\e[1;33m") \
#     LESS_TERMCAP_md=$(printf "\e[1;36m") \
#     LESS_TERMCAP_me=$(printf "\e[0m") \
#     LESS_TERMCAP_se=$(printf "\e[0m") \
#     LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
#     LESS_TERMCAP_ue=$(printf "\e[0m") \
#     LESS_TERMCAP_us=$(printf "\e[1;38m") \
#       man "$@"
# }

